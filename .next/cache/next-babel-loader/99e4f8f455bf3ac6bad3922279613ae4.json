{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from \"react\";\nvar LEFT_KEYS = [33, // pgup\n37 // arrow left\n];\nvar RIGHT_KEYS = [32, // space\n34, // pgdn\n39 // arrow right\n];\nvar SIDEBAR_KEYS = [73 // i\n];\nvar HOME_KEYS = [27 // ESC\n];\n\nvar KeyboardEventHandler = /*#__PURE__*/function (_PureComponent) {\n  _inherits(KeyboardEventHandler, _PureComponent);\n\n  var _super = _createSuper(KeyboardEventHandler);\n\n  function KeyboardEventHandler() {\n    var _this;\n\n    _classCallCheck(this, KeyboardEventHandler);\n\n    _this = _super.call(this);\n    _this.handleKeyUp = _this.handleKeyUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(KeyboardEventHandler, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"keyup\", this.handleKeyUp);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"keyup\", this.handleKeyUp);\n    }\n  }, {\n    key: \"handleKeyUp\",\n    value: function handleKeyUp(e) {\n      var keyCode = e.keyCode || e.detail.keyCode;\n      var _this$props = this.props,\n          onHome = _this$props.onHome,\n          onPrevious = _this$props.onPrevious,\n          onNext = _this$props.onNext,\n          onToggleSidebar = _this$props.onToggleSidebar;\n\n      if (e.altKey) {\n        return;\n      }\n\n      if (LEFT_KEYS.indexOf(keyCode) !== -1) {\n        e.preventDefault();\n        onPrevious();\n      } else if (RIGHT_KEYS.indexOf(keyCode) !== -1) {\n        e.preventDefault();\n        onNext();\n      } else if (SIDEBAR_KEYS.indexOf(keyCode) !== -1) {\n        e.preventDefault();\n        onToggleSidebar();\n      } else if (HOME_KEYS.indexOf(keyCode) !== -1) {\n        e.preventDefault();\n        onHome();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return KeyboardEventHandler;\n}(PureComponent);\n\nexport default KeyboardEventHandler;","map":null,"metadata":{},"sourceType":"module"}