{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/km/git/splendid-nudibranch/pages/photos/[id].js\";\nimport Head from \"next/head\";\nimport { useEffect } from \"react\";\nimport { getPhotoData, getKeywordsForPhoto } from \"../../server/view-data-service\";\nimport { serverToClient } from \"../../server/photos/photo-data-conversion\";\nimport { forOne } from \"../../server/og-tags\";\nimport buildSrcSet from \"../../client/src/photos/src-set-builder\";\nimport PhotoWrapper from \"../../client/src/photos\";\nimport { photoTitle, baseTitle } from \"../../src/title-service\";\n\nfunction PhotoPage({\n  keywords,\n  photo\n}) {\n  let availWidth = 400;\n  useEffect(() => {\n    availWidth = screen.availWidth;\n  });\n  photo.srcSet = buildSrcSet(photo.sizes, availWidth);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: keywords.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), Object.entries(forOne(photo)).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: key,\n        content: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(PhotoWrapper, {\n        selectedPhoto: photo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), \"/>\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const allPhotos = await getPhotoData();\n  return {\n    paths: allPhotos.photos.map(photo => ({\n      params: {\n        id: photo.key\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const photoData = await getPhotoData();\n  const selectedPhoto = photoData.photos.find(photo => photo.key === context.params.id);\n\n  if (!selectedPhoto) {\n    return {\n      notFound: true\n    };\n  }\n\n  const photoKeywords = getKeywordsForPhoto(selectedPhoto);\n  const mappedPhoto = serverToClient(selectedPhoto, photoData.base);\n  return {\n    props: {\n      keywords: photoKeywords,\n      photo: mappedPhoto\n    }\n  };\n}\nexport default PhotoPage;","map":{"version":3,"sources":["/home/km/git/splendid-nudibranch/pages/photos/[id].js"],"names":["Head","useEffect","getPhotoData","getKeywordsForPhoto","serverToClient","forOne","buildSrcSet","PhotoWrapper","photoTitle","baseTitle","PhotoPage","keywords","photo","availWidth","screen","srcSet","sizes","join","Object","entries","map","key","value","getStaticPaths","allPhotos","paths","photos","params","id","fallback","getStaticProps","context","photoData","selectedPhoto","find","notFound","photoKeywords","mappedPhoto","base","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,SACEC,YADF,EAEEC,mBAFF,QAGO,gCAHP;AAIA,SAASC,cAAT,QAA+B,2CAA/B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,yBAAtC;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAnB,EAAwC;AACtC,MAAIC,UAAU,GAAG,GAAjB;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,GAAGC,MAAM,CAACD,UAApB;AACD,GAFQ,CAAT;AAIAD,EAAAA,KAAK,CAACG,MAAN,GAAeT,WAAW,CAACM,KAAK,CAACI,KAAP,EAAcH,UAAd,CAA1B;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAEF,QAAQ,CAACM,IAAT,CAAc,IAAd;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGC,MAAM,CAACC,OAAP,CAAed,MAAM,CAACO,KAAD,CAArB,EAA8BQ,GAA9B,CAAkC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,kBACjC;AAAM,QAAA,QAAQ,EAAED,GAAhB;AAAqB,QAAA,OAAO,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,cADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,aAAa,EAAEV;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAgBD;;AAED,OAAO,eAAeW,cAAf,GAAgC;AACrC,QAAMC,SAAS,GAAG,MAAMtB,YAAY,EAApC;AACA,SAAO;AACLuB,IAAAA,KAAK,EAAED,SAAS,CAACE,MAAV,CAAiBN,GAAjB,CAAsBR,KAAD,KAAY;AACtCe,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEhB,KAAK,CAACS;AADJ;AAD8B,KAAZ,CAArB,CADF;AAMLQ,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,SAAS,GAAG,MAAM9B,YAAY,EAApC;AAEA,QAAM+B,aAAa,GAAGD,SAAS,CAACN,MAAV,CAAiBQ,IAAjB,CACnBtB,KAAD,IAAWA,KAAK,CAACS,GAAN,KAAcU,OAAO,CAACJ,MAAR,CAAeC,EADpB,CAAtB;;AAGA,MAAI,CAACK,aAAL,EAAoB;AAClB,WAAO;AACLE,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AAED,QAAMC,aAAa,GAAGjC,mBAAmB,CAAC8B,aAAD,CAAzC;AACA,QAAMI,WAAW,GAAGjC,cAAc,CAAC6B,aAAD,EAAgBD,SAAS,CAACM,IAA1B,CAAlC;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL5B,MAAAA,QAAQ,EAAEyB,aADL;AAELxB,MAAAA,KAAK,EAAEyB;AAFF;AADF,GAAP;AAMD;AAED,eAAe3B,SAAf","sourcesContent":["import Head from \"next/head\";\nimport { useEffect } from \"react\";\n\nimport {\n  getPhotoData,\n  getKeywordsForPhoto,\n} from \"../../server/view-data-service\";\nimport { serverToClient } from \"../../server/photos/photo-data-conversion\";\nimport { forOne } from \"../../server/og-tags\";\nimport buildSrcSet from \"../../client/src/photos/src-set-builder\";\nimport PhotoWrapper from \"../../client/src/photos\";\nimport { photoTitle, baseTitle } from \"../../src/title-service\";\n\nfunction PhotoPage({ keywords, photo }) {\n  let availWidth = 400;\n  useEffect(() => {\n    availWidth = screen.availWidth;\n  });\n\n  photo.srcSet = buildSrcSet(photo.sizes, availWidth);\n\n  return (\n    <>\n      <Head>\n        <title></title>\n        <meta name=\"keywords\" content={keywords.join(\", \")} />\n        {Object.entries(forOne(photo)).map(([key, value]) => (\n          <meta property={key} content={value} />\n        ))}\n      </Head>\n\n      <div id=\"container\">\n        <PhotoWrapper selectedPhoto={photo} />\n        />\n      </div>\n    </>\n  );\n}\n\nexport async function getStaticPaths() {\n  const allPhotos = await getPhotoData();\n  return {\n    paths: allPhotos.photos.map((photo) => ({\n      params: {\n        id: photo.key,\n      },\n    })),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps(context) {\n  const photoData = await getPhotoData();\n\n  const selectedPhoto = photoData.photos.find(\n    (photo) => photo.key === context.params.id\n  );\n  if (!selectedPhoto) {\n    return {\n      notFound: true,\n    };\n  }\n\n  const photoKeywords = getKeywordsForPhoto(selectedPhoto);\n  const mappedPhoto = serverToClient(selectedPhoto, photoData.base);\n\n  return {\n    props: {\n      keywords: photoKeywords,\n      photo: mappedPhoto,\n    },\n  };\n}\n\nexport default PhotoPage;\n"]},"metadata":{},"sourceType":"module"}