{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from \"react\";\nimport Link from \"next/link\";\nimport TransitionImage from \"../transition-image\";\nimport PhotoText from \"../photos/photo-text\"; // import decorateLink from \"../feature/decorate-link\";\n// todo: fix inkludering av search params p√• lenker\n\nvar Photo = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Photo, _PureComponent);\n\n  var _super = _createSuper(Photo);\n\n  function Photo() {\n    var _this;\n\n    _classCallCheck(this, Photo);\n\n    _this = _super.call(this);\n    _this.state = {\n      inViewport: false\n    };\n    return _this;\n  }\n\n  _createClass(Photo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var options = {\n        root: null,\n        rootMargin: \"300px\"\n      };\n      var observer = new IntersectionObserver(function (entries, observer) {\n        entries.forEach(function (entry) {\n          if (entry.isIntersecting) {\n            _this2.setState({\n              inViewport: true\n            });\n          }\n        });\n      }, options);\n      observer.observe(this.domElem);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          photo = _this$props.photo,\n          setWidth = _this$props.setWidth;\n      var inViewport = this.state.inViewport;\n      var style = {\n        width: setWidth ? \"\".concat(photo.displayedWidth, \"px\") : \"100%\"\n      };\n      return /*#__PURE__*/_jsxs(\"div\", {\n        ref: function ref(domElem) {\n          return _this3.domElem = domElem;\n        },\n        className: \"photo\",\n        \"data-photo-key\": photo.key,\n        style: style,\n        children: [/*#__PURE__*/_jsx(Link, {\n          href: \"/photos/\".concat(photo.key),\n          children: /*#__PURE__*/_jsxs(\"a\", {\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"overlay-title-wrapper\",\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: \"title\",\n                children: photo.title\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: \"location\",\n                children: photo.location\n              })]\n            }), inViewport && /*#__PURE__*/_jsx(TransitionImage, {\n              alt: photo.title,\n              src: photo.sizes.xsmall.url,\n              srcSet: photo.srcSet,\n              sizes: \"(min-width: 1100px) 30vw, 100vw\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"sn-dn-ns sn-mb-l\",\n          children: /*#__PURE__*/_jsx(PhotoText, {\n            photo: photo\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Photo;\n}(PureComponent);\n\nexport default Photo;","map":null,"metadata":{},"sourceType":"module"}