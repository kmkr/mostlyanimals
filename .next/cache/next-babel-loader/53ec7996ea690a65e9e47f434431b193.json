{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/km/git/splendid-nudibranch/pages/photos/[id].js\",\n    _s = $RefreshSig$();\n\nimport Head from \"next/head\";\nimport { useEffect } from \"react\";\nimport Collage from \"../client/src/collage\";\nimport buildSrcSet from \"../client/src/photos/src-set-builder\";\n\nfunction PhotoPage(_ref) {\n  _s();\n\n  var keywords = _ref.keywords,\n      photos = _ref.photos;\n  var availWidth = 400;\n  useEffect(function () {\n    availWidth = screen.availWidth;\n  });\n  var photosWidthSrcSet = photos.map(function (photo) {\n    photo.srcSet = buildSrcSet(photo.sizes, availWidth);\n    return photo;\n  });\n  var featuredPhotos = photos.filter(function (photo) {\n    return photo.featured;\n  });\n  var nonFeaturedPhotos = photos.filter(function (photo) {\n    return !photo.featured;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: keywords.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(PhotosWrapper, {\n        selectedPhoto: selectedPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), \"/>\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PhotoPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PhotoPage;\nexport var __N_SSG = true;\nexport default PhotoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoPage\");","map":{"version":3,"sources":["/home/km/git/splendid-nudibranch/pages/photos/[id].js"],"names":["Head","useEffect","Collage","buildSrcSet","PhotoPage","keywords","photos","availWidth","screen","photosWidthSrcSet","map","photo","srcSet","sizes","featuredPhotos","filter","featured","nonFeaturedPhotos","join","selectedPhoto"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAGA,OAAOC,WAAP,MAAwB,sCAAxB;;AAEA,SAASC,SAAT,OAAyC;AAAA;;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACvC,MAAIC,UAAU,GAAG,GAAjB;AACAN,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,UAAU,GAAGC,MAAM,CAACD,UAApB;AACD,GAFQ,CAAT;AAIA,MAAME,iBAAiB,GAAGH,MAAM,CAACI,GAAP,CAAW,UAACC,KAAD,EAAW;AAC9CA,IAAAA,KAAK,CAACC,MAAN,GAAeT,WAAW,CAACQ,KAAK,CAACE,KAAP,EAAcN,UAAd,CAA1B;AACA,WAAOI,KAAP;AACD,GAHyB,CAA1B;AAKA,MAAMG,cAAc,GAAGR,MAAM,CAACS,MAAP,CAAc,UAACJ,KAAD;AAAA,WAAWA,KAAK,CAACK,QAAjB;AAAA,GAAd,CAAvB;AACA,MAAMC,iBAAiB,GAAGX,MAAM,CAACS,MAAP,CAAc,UAACJ,KAAD;AAAA,WAAW,CAACA,KAAK,CAACK,QAAlB;AAAA,GAAd,CAA1B;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAEX,QAAQ,CAACa,IAAT,CAAc,IAAd;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,aAAa,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAYD;;GA1BQf,S;;KAAAA,S;;AAoDT,eAAeA,SAAf","sourcesContent":["import Head from \"next/head\";\nimport { useEffect } from \"react\";\n\nimport Collage from \"../client/src/collage\";\nimport { getPhotoData, getKeywordsForPhoto } from \"../server/view-data-service\";\nimport { serverToClient } from \"../server/photos/photo-data-conversion\";\nimport buildSrcSet from \"../client/src/photos/src-set-builder\";\n\nfunction PhotoPage({ keywords, photos }) {\n  let availWidth = 400;\n  useEffect(() => {\n    availWidth = screen.availWidth;\n  });\n\n  const photosWidthSrcSet = photos.map((photo) => {\n    photo.srcSet = buildSrcSet(photo.sizes, availWidth);\n    return photo;\n  });\n\n  const featuredPhotos = photos.filter((photo) => photo.featured);\n  const nonFeaturedPhotos = photos.filter((photo) => !photo.featured);\n\n  return (\n    <>\n      <Head>\n        <meta name=\"keywords\" content={keywords.join(\", \")} />\n      </Head>\n\n      <div id=\"container\">\n        <PhotosWrapper selectedPhoto={selectedPhoto} />\n        />\n      </div>\n    </>\n  );\n}\n\nexport async function getStaticProps(context) {\n  return Promise.all([getPhotoData(), getKeywordsForPhoto()]).then(\n    ([photoData, photoKeywords]) => {\n      const selectedPhoto = photoData.photos.find(\n        (photo) => photo.key === context.params.id\n      );\n\n      if (!selectedPhoto) {\n        return {\n          notFound: true,\n        };\n      }\n\n      const mappedPhoto = serverToClient(selectedPhoto, photoData.base);\n      return {\n        props: {\n          keywords: photoKeywords,\n          photo: mappedPhoto,\n        },\n      };\n    }\n  );\n}\n\nexport default PhotoPage;\n"]},"metadata":{},"sourceType":"module"}