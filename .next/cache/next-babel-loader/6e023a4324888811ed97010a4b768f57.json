{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst {\n  resizeTo\n} = require(\"./constants\");\n\nfunction buildUrl(base, key, name, size) {\n  return `${base}/${key}/${size}_${encodeURIComponent(name)}`;\n}\n\nfunction getMode(resizeData) {\n  const {\n    width,\n    height\n  } = resizeData[Object.keys(resizeData)[0]];\n  return width > height ? \"landscape\" : \"portrait\";\n}\n\nmodule.exports.serverToClient = function (photo, base) {\n  return {\n    name: photo.name,\n    key: photo.key,\n    title: photo.title,\n    description: photo.description,\n    latin: photo.latin,\n    location: photo.location,\n    // todo: remove tags requirement (only required for admin)\n    tags: photo.tags,\n    mode: getMode(photo.resize),\n    sizes: resizeTo.reduce((prev, current) => {\n      if (!photo.resize[current.name]) {\n        console.log(`Warning: missing size ${current.name} for ${photo.name}`);\n        return prev;\n      }\n\n      if (current.skipPayload) {\n        return prev;\n      }\n\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [current.name]: {\n          url: buildUrl(base, photo.key, photo.name, current.shortName),\n          width: photo.resize[current.name].width,\n          height: photo.resize[current.name].height\n        }\n      });\n    }, {})\n  };\n};","map":{"version":3,"sources":["/home/km/git/splendid-nudibranch/server/photos/photo-data-conversion.js"],"names":["resizeTo","require","buildUrl","base","key","name","size","encodeURIComponent","getMode","resizeData","width","height","Object","keys","module","exports","serverToClient","photo","title","description","latin","location","tags","mode","resize","sizes","reduce","prev","current","console","log","skipPayload","url","shortName"],"mappings":";;;;;;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAeC,OAAO,CAAC,aAAD,CAA5B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyC;AACvC,SAAQ,GAAEH,IAAK,IAAGC,GAAI,IAAGE,IAAK,IAAGC,kBAAkB,CAACF,IAAD,CAAO,EAA1D;AACD;;AAED,SAASG,OAAT,CAAiBC,UAAjB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,UAAU,CAACG,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwB,CAAxB,CAAD,CAApC;AAEA,SAAOC,KAAK,GAAGC,MAAR,GAAiB,WAAjB,GAA+B,UAAtC;AACD;;AAEDG,MAAM,CAACC,OAAP,CAAeC,cAAf,GAAgC,UAAUC,KAAV,EAAiBd,IAAjB,EAAuB;AACrD,SAAO;AACLE,IAAAA,IAAI,EAAEY,KAAK,CAACZ,IADP;AAELD,IAAAA,GAAG,EAAEa,KAAK,CAACb,GAFN;AAGLc,IAAAA,KAAK,EAAED,KAAK,CAACC,KAHR;AAILC,IAAAA,WAAW,EAAEF,KAAK,CAACE,WAJd;AAKLC,IAAAA,KAAK,EAAEH,KAAK,CAACG,KALR;AAMLC,IAAAA,QAAQ,EAAEJ,KAAK,CAACI,QANX;AAOL;AACAC,IAAAA,IAAI,EAAEL,KAAK,CAACK,IARP;AASLC,IAAAA,IAAI,EAAEf,OAAO,CAACS,KAAK,CAACO,MAAP,CATR;AAULC,IAAAA,KAAK,EAAEzB,QAAQ,CAAC0B,MAAT,CAAgB,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACxC,UAAI,CAACX,KAAK,CAACO,MAAN,CAAaI,OAAO,CAACvB,IAArB,CAAL,EAAiC;AAC/BwB,QAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBF,OAAO,CAACvB,IAAK,QAAOY,KAAK,CAACZ,IAAK,EAApE;AACA,eAAOsB,IAAP;AACD;;AAED,UAAIC,OAAO,CAACG,WAAZ,EAAyB;AACvB,eAAOJ,IAAP;AACD;;AACD,6CACKA,IADL;AAEE,SAACC,OAAO,CAACvB,IAAT,GAAgB;AACd2B,UAAAA,GAAG,EAAE9B,QAAQ,CAACC,IAAD,EAAOc,KAAK,CAACb,GAAb,EAAkBa,KAAK,CAACZ,IAAxB,EAA8BuB,OAAO,CAACK,SAAtC,CADC;AAEdvB,UAAAA,KAAK,EAAEO,KAAK,CAACO,MAAN,CAAaI,OAAO,CAACvB,IAArB,EAA2BK,KAFpB;AAGdC,UAAAA,MAAM,EAAEM,KAAK,CAACO,MAAN,CAAaI,OAAO,CAACvB,IAArB,EAA2BM;AAHrB;AAFlB;AAQD,KAjBM,EAiBJ,EAjBI;AAVF,GAAP;AA6BD,CA9BD","sourcesContent":["const { resizeTo } = require(\"./constants\");\n\nfunction buildUrl(base, key, name, size) {\n  return `${base}/${key}/${size}_${encodeURIComponent(name)}`;\n}\n\nfunction getMode(resizeData) {\n  const { width, height } = resizeData[Object.keys(resizeData)[0]];\n\n  return width > height ? \"landscape\" : \"portrait\";\n}\n\nmodule.exports.serverToClient = function (photo, base) {\n  return {\n    name: photo.name,\n    key: photo.key,\n    title: photo.title,\n    description: photo.description,\n    latin: photo.latin,\n    location: photo.location,\n    // todo: remove tags requirement (only required for admin)\n    tags: photo.tags,\n    mode: getMode(photo.resize),\n    sizes: resizeTo.reduce((prev, current) => {\n      if (!photo.resize[current.name]) {\n        console.log(`Warning: missing size ${current.name} for ${photo.name}`);\n        return prev;\n      }\n\n      if (current.skipPayload) {\n        return prev;\n      }\n      return {\n        ...prev,\n        [current.name]: {\n          url: buildUrl(base, photo.key, photo.name, current.shortName),\n          width: photo.resize[current.name].width,\n          height: photo.resize[current.name].height,\n        },\n      };\n    }, {}),\n  };\n};\n"]},"metadata":{},"sourceType":"script"}