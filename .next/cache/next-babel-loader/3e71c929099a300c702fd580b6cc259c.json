{"ast":null,"code":"const {\n  MongoClient\n} = require(\"mongodb\");\n\nconst getCollection = require(\"./get\");\n\nconst insertToCollection = require(\"./insert\");\n\nconst destroyFromCollection = require(\"./destroy\");\n\nconst updateOneInCollection = require(\"./update\");\n\nconst url = process.env.SN_DB_URL;\nconst getDb = new Promise((resolve, reject) => {\n  client = new MongoClient(url, {\n    useNewUrlParser: true\n  });\n  client.connect(err => {\n    if (err) {\n      return reject(err);\n    }\n\n    return resolve(client.db(\"splendid-nudibranch\"));\n  });\n});\nmodule.exports = {\n  insert(collectionName, data) {\n    return getDb.then(db => insertToCollection(db, collectionName, data));\n  },\n\n  list(collectionName, filter) {\n    return getDb.then(db => getCollection(db, collectionName, filter));\n  },\n\n  delete(collectionName, filter) {\n    return getDb.then(db => destroyFromCollection(db, collectionName, filter));\n  },\n\n  update(collectionName, filter, newValues) {\n    return getDb.then(db => updateOneInCollection(db, collectionName, filter, newValues)).then(() => this.list(collectionName, filter)).then(data => data[0]);\n  },\n\n  updateWithInsertFallback(collectionName, filter, data) {\n    return getDb.then(db => {\n      return getCollection(db, collectionName, filter).then(collection => {\n        if (collection.length) {\n          return updateOneInCollection(db, collectionName, filter, data);\n        }\n\n        return insertToCollection(db, collectionName, data);\n      });\n    });\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}