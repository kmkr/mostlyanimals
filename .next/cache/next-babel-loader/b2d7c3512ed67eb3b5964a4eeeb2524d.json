{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/km/git/splendid-nudibranch/pages/photos/[id].js\";\nimport Head from \"next/head\";\nimport { useEffect } from \"react\";\nimport { getPhotoData, getKeywordsForPhoto } from \"../../server/view-data-service\";\nimport { serverToClient } from \"../../server/photos/photo-data-conversion\";\nimport buildSrcSet from \"../../client/src/photos/src-set-builder\";\n\nfunction PhotoPage({\n  keywords,\n  selectedPhoto\n}) {\n  let availWidth = 400;\n  useEffect(() => {\n    availWidth = screen.availWidth;\n  });\n  selectedPhoto.srcSet = buildSrcSet(photo.sizes, availWidth);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: keywords.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(PhotosWrapper, {\n        selectedPhoto: selectedPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \"/>\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const allPhotos = await getPhotoData();\n  return {\n    paths: allPhotos.photos.map(photo => ({\n      params: {\n        id: photo.key\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  return Promise.all([getPhotoData(), getKeywordsForPhoto()]).then(([photoData, photoKeywords]) => {\n    const selectedPhoto = photoData.photos.find(photo => photo.key === context.params.id);\n\n    if (!selectedPhoto) {\n      return {\n        notFound: true\n      };\n    }\n\n    const mappedPhoto = serverToClient(selectedPhoto, photoData.base);\n    return {\n      props: {\n        keywords: photoKeywords,\n        photo: mappedPhoto\n      }\n    };\n  });\n}\nexport default PhotoPage;","map":{"version":3,"sources":["/home/km/git/splendid-nudibranch/pages/photos/[id].js"],"names":["Head","useEffect","getPhotoData","getKeywordsForPhoto","serverToClient","buildSrcSet","PhotoPage","keywords","selectedPhoto","availWidth","screen","srcSet","photo","sizes","join","getStaticPaths","allPhotos","paths","photos","map","params","id","key","getStaticProps","context","Promise","all","then","photoData","photoKeywords","find","notFound","mappedPhoto","base","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,SACEC,YADF,EAEEC,mBAFF,QAGO,gCAHP;AAIA,SAASC,cAAT,QAA+B,2CAA/B;AACA,OAAOC,WAAP,MAAwB,yCAAxB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAnB,EAAgD;AAC9C,MAAIC,UAAU,GAAG,GAAjB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,GAAGC,MAAM,CAACD,UAApB;AACD,GAFQ,CAAT;AAIAD,EAAAA,aAAa,CAACG,MAAd,GAAuBN,WAAW,CAACO,KAAK,CAACC,KAAP,EAAcJ,UAAd,CAAlC;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAEF,QAAQ,CAACO,IAAT,CAAc,IAAd;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,aAAa,EAAEN;AAA9B;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAYD;;AAED,OAAO,eAAeO,cAAf,GAAgC;AACrC,QAAMC,SAAS,GAAG,MAAMd,YAAY,EAApC;AACA,SAAO;AACLe,IAAAA,KAAK,EAAED,SAAS,CAACE,MAAV,CAAiBC,GAAjB,CAAsBP,KAAD,KAAY;AACtCQ,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAET,KAAK,CAACU;AADJ;AAD8B,KAAZ,CAArB;AADF,GAAP;AAOD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,SAAOC,OAAO,CAACC,GAAR,CAAY,CAACxB,YAAY,EAAb,EAAiBC,mBAAmB,EAApC,CAAZ,EAAqDwB,IAArD,CACL,CAAC,CAACC,SAAD,EAAYC,aAAZ,CAAD,KAAgC;AAC9B,UAAMrB,aAAa,GAAGoB,SAAS,CAACV,MAAV,CAAiBY,IAAjB,CACnBlB,KAAD,IAAWA,KAAK,CAACU,GAAN,KAAcE,OAAO,CAACJ,MAAR,CAAeC,EADpB,CAAtB;;AAIA,QAAI,CAACb,aAAL,EAAoB;AAClB,aAAO;AACLuB,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD;;AAED,UAAMC,WAAW,GAAG5B,cAAc,CAACI,aAAD,EAAgBoB,SAAS,CAACK,IAA1B,CAAlC;AACA,WAAO;AACLC,MAAAA,KAAK,EAAE;AACL3B,QAAAA,QAAQ,EAAEsB,aADL;AAELjB,QAAAA,KAAK,EAAEoB;AAFF;AADF,KAAP;AAMD,GAnBI,CAAP;AAqBD;AAED,eAAe1B,SAAf","sourcesContent":["import Head from \"next/head\";\nimport { useEffect } from \"react\";\n\nimport {\n  getPhotoData,\n  getKeywordsForPhoto,\n} from \"../../server/view-data-service\";\nimport { serverToClient } from \"../../server/photos/photo-data-conversion\";\nimport buildSrcSet from \"../../client/src/photos/src-set-builder\";\n\nfunction PhotoPage({ keywords, selectedPhoto }) {\n  let availWidth = 400;\n  useEffect(() => {\n    availWidth = screen.availWidth;\n  });\n\n  selectedPhoto.srcSet = buildSrcSet(photo.sizes, availWidth);\n\n  return (\n    <>\n      <Head>\n        <meta name=\"keywords\" content={keywords.join(\", \")} />\n      </Head>\n\n      <div id=\"container\">\n        <PhotosWrapper selectedPhoto={selectedPhoto} />\n        />\n      </div>\n    </>\n  );\n}\n\nexport async function getStaticPaths() {\n  const allPhotos = await getPhotoData();\n  return {\n    paths: allPhotos.photos.map((photo) => ({\n      params: {\n        id: photo.key,\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  return Promise.all([getPhotoData(), getKeywordsForPhoto()]).then(\n    ([photoData, photoKeywords]) => {\n      const selectedPhoto = photoData.photos.find(\n        (photo) => photo.key === context.params.id\n      );\n\n      if (!selectedPhoto) {\n        return {\n          notFound: true,\n        };\n      }\n\n      const mappedPhoto = serverToClient(selectedPhoto, photoData.base);\n      return {\n        props: {\n          keywords: photoKeywords,\n          photo: mappedPhoto,\n        },\n      };\n    }\n  );\n}\n\nexport default PhotoPage;\n"]},"metadata":{},"sourceType":"module"}