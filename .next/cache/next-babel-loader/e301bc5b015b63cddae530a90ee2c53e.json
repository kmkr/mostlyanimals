{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport getWidth from \"./get-width\";\n\nfunction getNumPortrait(photos) {\n  return photos.filter(function (photo) {\n    return photo.mode === \"portrait\";\n  }).length;\n}\n\nexport default function (_photos) {\n  var photos = _toConsumableArray(_photos);\n\n  var totalWidth = Math.min(getWidth(), 2560);\n  var groups = [];\n\n  while (photos.length) {\n    var subGroup = {\n      key: \"\",\n      height: null,\n      photos: []\n    };\n    var numThisRow = 3;\n    var portraitScaleFactor = 1;\n    var landscapeScaleFactor = 1;\n    var numNext5 = getNumPortrait(photos.slice(0, 5));\n\n    if (numNext5 && numNext5 < 5) {\n      var numNext4 = getNumPortrait(photos.slice(0, 4));\n      var numNext3 = getNumPortrait(photos.slice(0, 3));\n\n      if (numNext5 === 4) {\n        // ??\n        numThisRow = 5;\n      } else if (numNext5 === 3) {\n        numThisRow = 5;\n        portraitScaleFactor = 0.6;\n        landscapeScaleFactor = 1.3;\n      } else if (numNext4 === 2) {\n        numThisRow = 4;\n        portraitScaleFactor = 0.6;\n        landscapeScaleFactor = 1.35;\n      } else if (numNext3 === 1) {\n        portraitScaleFactor = 0.5;\n        landscapeScaleFactor = 1.2;\n      }\n    }\n\n    for (var i = 0; i < numThisRow; i++) {\n      var photoToAdd = photos.shift();\n\n      if (!photoToAdd) {\n        groups.push(subGroup);\n        return groups;\n      }\n\n      var scale = photoToAdd.mode === \"portrait\" ? portraitScaleFactor : landscapeScaleFactor;\n      var marginsInRow = (numThisRow + 1) * 8;\n      photoToAdd.displayedWidth = (totalWidth - marginsInRow) / numThisRow * scale;\n      subGroup.photos.push(photoToAdd);\n      subGroup.key += photoToAdd.key;\n      var ratio = photoToAdd.sizes.small.height / photoToAdd.sizes.small.width;\n      var height = photoToAdd.displayedWidth * ratio;\n      subGroup.height = subGroup.height ? Math.min(subGroup.height, height) : height; // next row\n    }\n\n    groups.push(subGroup);\n  }\n\n  return groups;\n}","map":null,"metadata":{},"sourceType":"module"}