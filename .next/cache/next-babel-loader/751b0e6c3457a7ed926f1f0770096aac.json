{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nmodule.exports = (db, collectionName, _item) => {\n  const now = new Date();\n\n  const item = _objectSpread(_objectSpread({}, _item), {}, {\n    created_at: now,\n    updated_at: now\n  });\n\n  return new Promise((resolve, reject) => {\n    return db.collection(collectionName).insert(item, (err, result) => {\n      if (err) {\n        return reject(err);\n      }\n\n      console.log(`[db/index] Inserted item to collection ${collectionName}`);\n      return resolve(result);\n    });\n  });\n};","map":{"version":3,"sources":["/home/km/git/splendid-nudibranch/server/db/insert/index.js"],"names":["module","exports","db","collectionName","_item","now","Date","item","created_at","updated_at","Promise","resolve","reject","collection","insert","err","result","console","log"],"mappings":";;;;;;AAAAA,MAAM,CAACC,OAAP,GAAiB,CAACC,EAAD,EAAKC,cAAL,EAAqBC,KAArB,KAA+B;AAC9C,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;;AACA,QAAMC,IAAI,mCACLH,KADK;AAERI,IAAAA,UAAU,EAAEH,GAFJ;AAGRI,IAAAA,UAAU,EAAEJ;AAHJ,IAAV;;AAMA,SAAO,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAOV,EAAE,CAACW,UAAH,CAAcV,cAAd,EAA8BW,MAA9B,CAAqCP,IAArC,EAA2C,CAACQ,GAAD,EAAMC,MAAN,KAAiB;AACjE,UAAID,GAAJ,EAAS;AACP,eAAOH,MAAM,CAACG,GAAD,CAAb;AACD;;AAEDE,MAAAA,OAAO,CAACC,GAAR,CAAa,0CAAyCf,cAAe,EAArE;AACA,aAAOQ,OAAO,CAACK,MAAD,CAAd;AACD,KAPM,CAAP;AAQD,GATM,CAAP;AAUD,CAlBD","sourcesContent":["module.exports = (db, collectionName, _item) => {\n  const now = new Date();\n  const item = {\n    ..._item,\n    created_at: now,\n    updated_at: now,\n  };\n\n  return new Promise((resolve, reject) => {\n    return db.collection(collectionName).insert(item, (err, result) => {\n      if (err) {\n        return reject(err);\n      }\n\n      console.log(`[db/index] Inserted item to collection ${collectionName}`);\n      return resolve(result);\n    });\n  });\n};\n"]},"metadata":{},"sourceType":"script"}