{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst {\n  resizeTo\n} = require(\"./constants\");\n\nfunction buildUrl(base, key, name, size) {\n  return `${base}/${key}/${size}_${encodeURIComponent(name)}`;\n}\n\nfunction getMode(resizeData) {\n  const {\n    width,\n    height\n  } = resizeData[Object.keys(resizeData)[0]];\n  return width > height ? \"landscape\" : \"portrait\";\n}\n\nmodule.exports.serverToClient = function (photo, base) {\n  return {\n    name: photo.name,\n    key: photo.key,\n    title: photo.title,\n    description: photo.description,\n    latin: photo.latin || null,\n    location: photo.location,\n    // todo: remove tags requirement (only required for admin)\n    tags: photo.tags,\n    mode: getMode(photo.resize),\n    sizes: resizeTo.reduce((prev, current) => {\n      if (!photo.resize[current.name]) {\n        console.log(`Warning: missing size ${current.name} for ${photo.name}`);\n        return prev;\n      }\n\n      if (current.skipPayload) {\n        return prev;\n      }\n\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [current.name]: {\n          url: buildUrl(base, photo.key, photo.name, current.shortName),\n          width: photo.resize[current.name].width,\n          height: photo.resize[current.name].height\n        }\n      });\n    }, {})\n  };\n};","map":null,"metadata":{},"sourceType":"script"}