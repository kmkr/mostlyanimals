{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/km/git/splendid-nudibranch/pages/photos/[id].js\";\nimport Head from \"next/head\";\nimport { useEffect } from \"react\";\nimport { getPhotoData, getKeywordsForPhoto } from \"../server/view-data-service\";\nimport { serverToClient } from \"../server/photos/photo-data-conversion\";\nimport buildSrcSet from \"../client/src/photos/src-set-builder\";\n\nfunction PhotoPage({\n  keywords,\n  photos\n}) {\n  let availWidth = 400;\n  useEffect(() => {\n    availWidth = screen.availWidth;\n  });\n  const photosWidthSrcSet = photos.map(photo => {\n    photo.srcSet = buildSrcSet(photo.sizes, availWidth);\n    return photo;\n  });\n  const featuredPhotos = photos.filter(photo => photo.featured);\n  const nonFeaturedPhotos = photos.filter(photo => !photo.featured);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: keywords.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(PhotosWrapper, {\n        selectedPhoto: selectedPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \"/>\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticProps(context) {\n  return Promise.all([getPhotoData(), getKeywordsForPhoto()]).then(([photoData, photoKeywords]) => {\n    const selectedPhoto = photoData.photos.find(photo => photo.key === context.params.id);\n\n    if (!selectedPhoto) {\n      return {\n        notFound: true\n      };\n    }\n\n    const mappedPhoto = serverToClient(selectedPhoto, photoData.base);\n    return {\n      props: {\n        keywords: photoKeywords,\n        photo: mappedPhoto\n      }\n    };\n  });\n}\nexport default PhotoPage;","map":{"version":3,"sources":["/home/km/git/splendid-nudibranch/pages/photos/[id].js"],"names":["Head","useEffect","getPhotoData","getKeywordsForPhoto","serverToClient","buildSrcSet","PhotoPage","keywords","photos","availWidth","screen","photosWidthSrcSet","map","photo","srcSet","sizes","featuredPhotos","filter","featured","nonFeaturedPhotos","join","selectedPhoto","getStaticProps","context","Promise","all","then","photoData","photoKeywords","find","key","params","id","notFound","mappedPhoto","base","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,6BAAlD;AACA,SAASC,cAAT,QAA+B,wCAA/B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAnB,EAAyC;AACvC,MAAIC,UAAU,GAAG,GAAjB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,GAAGC,MAAM,CAACD,UAApB;AACD,GAFQ,CAAT;AAIA,QAAME,iBAAiB,GAAGH,MAAM,CAACI,GAAP,CAAYC,KAAD,IAAW;AAC9CA,IAAAA,KAAK,CAACC,MAAN,GAAeT,WAAW,CAACQ,KAAK,CAACE,KAAP,EAAcN,UAAd,CAA1B;AACA,WAAOI,KAAP;AACD,GAHyB,CAA1B;AAKA,QAAMG,cAAc,GAAGR,MAAM,CAACS,MAAP,CAAeJ,KAAD,IAAWA,KAAK,CAACK,QAA/B,CAAvB;AACA,QAAMC,iBAAiB,GAAGX,MAAM,CAACS,MAAP,CAAeJ,KAAD,IAAW,CAACA,KAAK,CAACK,QAAhC,CAA1B;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAEX,QAAQ,CAACa,IAAT,CAAc,IAAd;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,aAAa,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAYD;;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,SAAOC,OAAO,CAACC,GAAR,CAAY,CAACvB,YAAY,EAAb,EAAiBC,mBAAmB,EAApC,CAAZ,EAAqDuB,IAArD,CACL,CAAC,CAACC,SAAD,EAAYC,aAAZ,CAAD,KAAgC;AAC9B,UAAMP,aAAa,GAAGM,SAAS,CAACnB,MAAV,CAAiBqB,IAAjB,CACnBhB,KAAD,IAAWA,KAAK,CAACiB,GAAN,KAAcP,OAAO,CAACQ,MAAR,CAAeC,EADpB,CAAtB;;AAIA,QAAI,CAACX,aAAL,EAAoB;AAClB,aAAO;AACLY,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD;;AAED,UAAMC,WAAW,GAAG9B,cAAc,CAACiB,aAAD,EAAgBM,SAAS,CAACQ,IAA1B,CAAlC;AACA,WAAO;AACLC,MAAAA,KAAK,EAAE;AACL7B,QAAAA,QAAQ,EAAEqB,aADL;AAELf,QAAAA,KAAK,EAAEqB;AAFF;AADF,KAAP;AAMD,GAnBI,CAAP;AAqBD;AAED,eAAe5B,SAAf","sourcesContent":["import Head from \"next/head\";\nimport { useEffect } from \"react\";\n\nimport { getPhotoData, getKeywordsForPhoto } from \"../server/view-data-service\";\nimport { serverToClient } from \"../server/photos/photo-data-conversion\";\nimport buildSrcSet from \"../client/src/photos/src-set-builder\";\n\nfunction PhotoPage({ keywords, photos }) {\n  let availWidth = 400;\n  useEffect(() => {\n    availWidth = screen.availWidth;\n  });\n\n  const photosWidthSrcSet = photos.map((photo) => {\n    photo.srcSet = buildSrcSet(photo.sizes, availWidth);\n    return photo;\n  });\n\n  const featuredPhotos = photos.filter((photo) => photo.featured);\n  const nonFeaturedPhotos = photos.filter((photo) => !photo.featured);\n\n  return (\n    <>\n      <Head>\n        <meta name=\"keywords\" content={keywords.join(\", \")} />\n      </Head>\n\n      <div id=\"container\">\n        <PhotosWrapper selectedPhoto={selectedPhoto} />\n        />\n      </div>\n    </>\n  );\n}\n\nexport async function getStaticProps(context) {\n  return Promise.all([getPhotoData(), getKeywordsForPhoto()]).then(\n    ([photoData, photoKeywords]) => {\n      const selectedPhoto = photoData.photos.find(\n        (photo) => photo.key === context.params.id\n      );\n\n      if (!selectedPhoto) {\n        return {\n          notFound: true,\n        };\n      }\n\n      const mappedPhoto = serverToClient(selectedPhoto, photoData.base);\n      return {\n        props: {\n          keywords: photoKeywords,\n          photo: mappedPhoto,\n        },\n      };\n    }\n  );\n}\n\nexport default PhotoPage;\n"]},"metadata":{},"sourceType":"module"}