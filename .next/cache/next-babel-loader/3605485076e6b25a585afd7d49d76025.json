{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { PureComponent } from \"react\";\nimport Photo from \"./photo\";\nimport setPhotoWidth from \"./set-width-helper\";\nimport throttle from \"./throttle\";\nimport getWidth from \"./get-width\";\nimport MidWater from \"./mid-water\";\n\nfunction hasScrollbar() {\n  return document.body.offsetHeight >= window.innerHeight;\n}\n\nclass Collage extends PureComponent {\n  constructor(props) {\n    super();\n    this.updateWidth = this.updateWidth.bind(this);\n    this.renderPhotoGroup = this.renderPhotoGroup.bind(this);\n    this.state = {}; // this.state = {\n    //   width: getWidth(),\n    // };\n  }\n\n  getIsCollage() {\n    if (this.state.width) {\n      return getWidth() > 1100;\n    }\n\n    return false;\n  }\n\n  updateWidth() {\n    this.setState({\n      width: getWidth()\n    });\n  }\n\n  componentDidMount() {\n    throttle(\"resize\", \"optimizedResize\");\n    window.addEventListener(\"optimizedResize\", this.updateWidth); // Force re-calculation of photo height/width if scrollbar is present\n    // if (hasScrollbar()) {\n\n    this.updateWidth(); // }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"optimizedResize\", this.updateWidth);\n  }\n\n  renderPhotoGroup(photoGroup) {\n    const {\n      onSelectPhoto\n    } = this.props;\n    const setDimensions = this.getIsCollage();\n    const style = setDimensions ? {\n      height: `${photoGroup.height}px`\n    } : {};\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"photo-group\",\n      style: style,\n      children: photoGroup.photos.map(photo => /*#__PURE__*/_jsx(Photo, {\n        setWidth: setDimensions,\n        photo: photo,\n        onSelect: onSelectPhoto\n      }, photo.key))\n    }, `photo-group-${photoGroup.key}`);\n  }\n\n  render() {\n    const {\n      featuredPhotos,\n      nonFeaturedPhotos\n    } = this.props;\n    const featuredPhotoGroups = setPhotoWidth(featuredPhotos);\n    const nonFeaturedPhotoGroups = setPhotoWidth(nonFeaturedPhotos);\n    return /*#__PURE__*/_jsxs(\"div\", {\n      id: \"collage\",\n      children: [featuredPhotoGroups.map(this.renderPhotoGroup), !!featuredPhotoGroups.length && /*#__PURE__*/_jsx(MidWater, {}), nonFeaturedPhotoGroups.map(this.renderPhotoGroup)]\n    });\n  }\n\n}\n\nexport default Collage;","map":null,"metadata":{},"sourceType":"module"}